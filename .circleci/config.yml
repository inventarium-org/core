# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#

workflows:
  version: 2
  pipline:
    jobs:
      - build
      - build_docker_container:
          requires:
            - build
      # - deploy:
      #     requires:
      #       - build_docker_container
      #       - deliver_docker_compose
      #     filters:
      #       branches:
      #         only: master

version: 2
jobs:
  build:
    environment:
      REDISTOGO_URL: "redis://localhost:6379"

    docker:
      - image: circleci/ruby:2.7.0-node-browsers
        environment:
            BUNDLER_VERSION: 2.0.2
      - image: circleci/postgres:9.6.2
      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install postgres client
          command: |
            sudo apt update
            sudo apt install postgresql-client

      - run:
          name: Wait for Redis to receive connections
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.0.2

            bundle config git.allow_insecure true

            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec hanami db prepare

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results

            bundle exec rspec

      - run:
         name: run rubocop
         command: |
           bundle exec rubocop

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  build_docker_container:
    machine: true

    steps:
      - checkout
      - run:
          name: Build Docker container and push to docker hub
          command: |
            docker login -u ${DOCKERHUB_LOGIN} -p ${DOCKERHUB_PASSWORD}
            docker build --rm -f "Dockerfile" -t davydovanton/inventarium:$CIRCLE_SHA1 .
            docker push davydovanton/inventarium:$CIRCLE_SHA1
